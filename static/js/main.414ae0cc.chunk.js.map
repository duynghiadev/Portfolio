{"version":3,"sources":["components/Header.js","services/customize-axios.js","services/UserService.js","components/ModalAddNew.js","components/TableUsers.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","_jsx","_Fragment","children","Navbar","bg","expand","_jsxs","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","Item","Divider","instance","axios","create","baseURL","interceptors","response","use","data","error","Promise","reject","fetchAllUser","page","get","concat","postCreateUser","name","job","post","ModalAddNew","show","handleClose","handleUpdateTable","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setJob","handleSaveUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","sent","toast","success","first_name","stop","apply","arguments","Modal","onHide","closeButton","Title","Body","type","value","onChange","event","target","Footer","Button","variant","onClick","TableUsers","listUsers","setListUsers","setTotalUsers","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","isShowModalAddNew","setIsShowModalAddNew","useEffect","getUsers","console","log","total","total_pages","_x","Table","striped","bordered","hover","length","map","item","index","email","last_name","ReactPaginate","breakLabel","nextLabel","onPageChange","selected","pageRangeDisplayed","pageCount","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakClassName","breakLinkClassName","containerClassName","activeClassName","user","_toConsumableArray","App","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iNAqCeA,EAhCA,SAACC,GACd,OACEC,cAAAC,WAAA,CAAAC,SACEF,cAACG,IAAM,CAACC,GAAG,QAAQC,OAAO,KAAIH,SAC5BI,eAACC,IAAS,CAAAL,SAAA,CACRF,cAACG,IAAOK,MAAK,CAACC,KAAK,QAAOP,SAAC,oBAC3BF,cAACG,IAAOO,OAAM,CAAC,gBAAc,qBAC7BV,cAACG,IAAOQ,SAAQ,CAACC,GAAG,mBAAkBV,SACpCI,eAACO,IAAG,CAACC,UAAU,UAASZ,SAAA,CACtBF,cAACa,IAAIE,KAAI,CAACN,KAAK,QAAOP,SAAC,SACvBF,cAACa,IAAIE,KAAI,CAACN,KAAK,QAAOP,SAAC,SACvBI,eAACU,IAAW,CAACC,MAAM,WAAWL,GAAG,qBAAoBV,SAAA,CACnDF,cAACgB,IAAYE,KAAI,CAACT,KAAK,cAAaP,SAAC,WACrCF,cAACgB,IAAYE,KAAI,CAACT,KAAK,cAAaP,SAAC,mBAGrCF,cAACgB,IAAYE,KAAI,CAACT,KAAK,cAAaP,SAAC,cAGrCF,cAACgB,IAAYG,QAAO,IACpBnB,cAACgB,IAAYE,KAAI,CAACT,KAAK,cAAaP,SAAC,iCAUrD,E,+CCjCMkB,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,sBAIXH,EAASI,aAAaC,SAASC,KAC7B,SAAUD,GAGR,OAAOA,EAASE,IAClB,IACA,SAAUC,GAGR,OAAOC,QAAQC,OAAOF,EACxB,IAGaR,QClBTW,EAAe,SAACC,GACpB,OAAOX,EAAMY,IAAI,mBAADC,OAAoBF,GACtC,EAEMG,EAAiB,SAACC,EAAMC,GAC5B,OAAOhB,EAAMiB,KAAK,aAAc,CAAEF,OAAMC,OAC1C,E,0CC4DeE,EA/DK,SAACxC,GACnB,IAAQyC,EAAyCzC,EAAzCyC,KAAMC,EAAmC1C,EAAnC0C,YAAaC,EAAsB3C,EAAtB2C,kBAE3BC,EAAwBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA7BP,EAAIS,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAAsBJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA3BX,EAAGY,EAAA,GAAEC,EAAMD,EAAA,GAEZE,EAAc,eAAAC,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACL1B,EAAeC,EAAMC,GAAK,KAAD,GAArCoB,EAAGE,EAAAG,OAEIL,EAAI7C,IACb6B,IACAM,IACAG,IACAa,IAAMC,QAAQ,8BACdtB,EAAkB,CAAEuB,WAAY7B,EAAMxB,GAAI6C,EAAI7C,MAE9CmD,IAAMnC,MAAM,eACb,wBAAA+B,EAAAO,OAAA,GAAAV,EAAA,KACF,kBAZmB,OAAAJ,EAAAe,MAAA,KAAAC,UAAA,KAcpB,OACEpE,cAAAC,WAAA,CAAAC,SACEI,eAAC+D,IAAK,CAAC7B,KAAMA,EAAM8B,OAAQ7B,EAAYvC,SAAA,CACrCF,cAACqE,IAAMvE,OAAM,CAACyE,aAAW,EAAArE,SACvBF,cAACqE,IAAMG,MAAK,CAAAtE,SAAC,mBAEfF,cAACqE,IAAMI,KAAI,CAAAvE,SACTF,cAAA,OAAKc,UAAU,eAAcZ,SAC3BI,eAAA,QAAAJ,SAAA,CACEI,eAAA,OAAKQ,UAAU,OAAMZ,SAAA,CACnBF,cAAA,SAAOc,UAAU,aAAYZ,SAAC,SAC9BF,cAAA,SACE0E,KAAK,OACL5D,UAAU,eACV6D,MAAOvC,EACPwC,SAAU,SAACC,GAAK,OAAK9B,EAAQ8B,EAAMC,OAAOH,MAAM,OAGpDrE,eAAA,OAAKQ,UAAU,OAAMZ,SAAA,CACnBF,cAAA,SAAOc,UAAU,aAAYZ,SAAC,QAC9BF,cAAA,SACE0E,KAAK,OACL5D,UAAU,eACV6D,MAAOtC,EACPuC,SAAU,SAACC,GAAK,OAAK3B,EAAO2B,EAAMC,OAAOH,MAAM,cAMzDrE,eAAC+D,IAAMU,OAAM,CAAA7E,SAAA,CACXF,cAACgF,IAAM,CAACC,QAAQ,YAAYC,QAASzC,EAAYvC,SAAC,UAGlDF,cAACgF,IAAM,CAACC,QAAQ,UAAUC,QAAS,kBAAM/B,GAAgB,EAACjD,SAAC,wBAOrE,EC0CeiF,EAtGI,SAACpF,GAClB,IAAA4C,EAAkCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAvCyC,EAASvC,EAAA,GAAEwC,EAAYxC,EAAA,GAC9BG,EAAoCJ,mBAAS,GAAEK,EAAAH,YAAAE,EAAA,GAA5BsC,GAAFrC,EAAA,GAAeA,EAAA,IAChCsC,EAAoC3C,mBAAS,GAAE4C,EAAA1C,YAAAyC,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAEhCG,EAAkD/C,oBAAS,GAAMgD,EAAA9C,YAAA6C,EAAA,GAA1DE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAM9CG,qBAAU,WAERC,EAAS,EACX,GAAG,IAEH,IAAMA,EAAQ,eAAA5C,EAAAC,YAAAC,cAAAC,MAAG,SAAAC,EAAOxB,GAAI,IAAAyB,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACV9B,EAAaC,GAAM,KAAD,EAA9ByB,EAAGE,EAAAG,KACPmC,QAAQC,IAAI,sBAAuBzC,GAE/BA,GAAOA,EAAI9B,OACb2D,EAAc7B,EAAI0C,OAClBd,EAAa5B,EAAI9B,MACjB+D,EAAcjC,EAAI2C,cACnB,wBAAAzC,EAAAO,OAAA,GAAAV,EAAA,KACF,gBATa6C,GAAA,OAAAjD,EAAAe,MAAA,KAAAC,UAAA,KAoBd,OACE9D,eAAAL,WAAA,CAAAC,SAAA,CACEI,eAAA,OAAKQ,UAAU,eAAcZ,SAAA,CAC3BF,cAAA,QAAAE,SACEF,cAAA,KAAAE,SAAG,kBAELF,cAAA,UACEc,UAAU,kBACVoE,QAAS,kBAAMY,GAAqB,EAAK,EAAC5F,SAC3C,oBAKHI,eAACgG,IAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAAAvG,SAAA,CAC3BF,cAAA,SAAAE,SACEI,eAAA,MAAAJ,SAAA,CACEF,cAAA,MAAAE,SAAI,OACJF,cAAA,MAAAE,SAAI,UACJF,cAAA,MAAAE,SAAI,eACJF,cAAA,MAAAE,SAAI,mBAGRF,cAAA,SAAAE,SACGkF,GACCA,EAAUsB,OAAS,GACnBtB,EAAUuB,KAAI,SAACC,EAAMC,GACnB,OACEvG,eAAA,MAAAJ,SAAA,CACEF,cAAA,MAAAE,SAAK0G,EAAKhG,KACVZ,cAAA,MAAAE,SAAK0G,EAAKE,QACV9G,cAAA,MAAAE,SAAK0G,EAAK3C,aACVjE,cAAA,MAAAE,SAAK0G,EAAKG,cAAe,SAAA7E,OAJT2E,GAOtB,SAGN7G,cAACgH,IAAa,CACZC,WAAW,MACXC,UAAU,SACVC,aAlDkB,SAACtC,GAEvBmB,GAAUnB,EAAMuC,SAAW,EAC7B,EAgDMC,mBAAoB,EACpBC,UAAW7B,EACX8B,cAAc,aACdC,cAAc,YACdC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,eAAe,YACfC,mBAAmB,YACnBC,mBAAmB,aACnBC,gBAAgB,WAGlBjI,cAACuC,EAAW,CACVC,KAAMqD,EACNpD,YAxFc,WAClBqD,GAAqB,EACvB,EAuFMpD,kBAhEoB,SAACwF,GACzB7C,EAAa,CAAC6C,GAAIhG,OAAAiG,YAAK/C,IACzB,MAkEF,EC3EegD,MAzBf,WACE,OACE9H,eAAAL,WAAA,CAAAC,SAAA,CACEI,eAAA,OAAKQ,UAAU,gBAAeZ,SAAA,CAC5BF,cAACF,EAAM,IACPE,cAACO,IAAS,CAAAL,SACRF,cAACmF,EAAU,SAGfnF,cAACqI,IAAc,CACbC,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YAId,ECjBeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA/F,GAAkD,IAA/CgG,EAAMhG,EAANgG,OAAQC,EAAMjG,EAANiG,OAAQC,EAAMlG,EAANkG,OAAQC,EAAMnG,EAANmG,OAAQC,EAAOpG,EAAPoG,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,E,cCHAQ,IAASC,OACP1J,cAAC2J,IAAMC,WAAU,CAAA1J,SACfF,cAACoI,EAAG,MAENyB,SAASC,eAAe,SAM1Bd,G","file":"static/js/main.414ae0cc.chunk.js","sourcesContent":["import Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.2\">\r\n                  Another action\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\">\r\n                  Something\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"#action/3.4\">\r\n                  Separated link\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://reqres.in\",\r\n});\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(\r\n  function (response) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import axios from \"./customize-axios\";\r\n\r\nconst fetchAllUser = (page) => {\r\n  return axios.get(`/api/users?page=${page}`);\r\n};\r\n\r\nconst postCreateUser = (name, job) => {\r\n  return axios.post(\"/api/users\", { name, job });\r\n};\r\n\r\nexport { fetchAllUser, postCreateUser };\r\n","import { useState } from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { postCreateUser } from \"../services/UserService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ModalAddNew = (props) => {\r\n  const { show, handleClose, handleUpdateTable } = props;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [job, setJob] = useState(\"\");\r\n\r\n  const handleSaveUser = async () => {\r\n    let res = await postCreateUser(name, job);\r\n\r\n    if (res && res.id) {\r\n      handleClose();\r\n      setName();\r\n      setJob();\r\n      toast.success(\"A user is created succeed!\");\r\n      handleUpdateTable({ first_name: name, id: res.id });\r\n    } else {\r\n      toast.error(\"An error...\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add new user</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div className=\"body-add-new\">\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={name}\r\n                  onChange={(event) => setName(event.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Job</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={job}\r\n                  onChange={(event) => setJob(event.target.value)}\r\n                />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={() => handleSaveUser()}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalAddNew;\r\n","import Table from \"react-bootstrap/Table\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchAllUser } from \"../services/UserService\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport ModalAddNew from \"./ModalAddNew\";\r\n\r\nconst TableUsers = (props) => {\r\n  const [listUsers, setListUsers] = useState([]);\r\n  const [totalUsers, setTotalUsers] = useState(0);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const [isShowModalAddNew, setIsShowModalAddNew] = useState(false);\r\n\r\n  const handleClose = () => {\r\n    setIsShowModalAddNew(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // call apis\r\n    getUsers(1);\r\n  }, []);\r\n\r\n  const getUsers = async (page) => {\r\n    let res = await fetchAllUser(page);\r\n    console.log(\">>> check res new: \", res);\r\n\r\n    if (res && res.data) {\r\n      setTotalUsers(res.total);\r\n      setListUsers(res.data);\r\n      setTotalPages(res.total_pages);\r\n    }\r\n  };\r\n\r\n  const handlePageClick = (event) => {\r\n    // Thêm dấu cộng ở đầu event là cho nó convert từ type string sang type number\r\n    getUsers(+event.selected + 1);\r\n  };\r\n\r\n  const handleUpdateTable = (user) => {\r\n    setListUsers([user, ...listUsers]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"my-3 add-new\">\r\n        <span>\r\n          <b>List Users:</b>\r\n        </span>\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={() => setIsShowModalAddNew(true)}\r\n        >\r\n          Add new user\r\n        </button>\r\n      </div>\r\n\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Email</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {listUsers &&\r\n            listUsers.length > 0 &&\r\n            listUsers.map((item, index) => {\r\n              return (\r\n                <tr key={`users-${index}`}>\r\n                  <td>{item.id}</td>\r\n                  <td>{item.email}</td>\r\n                  <td>{item.first_name}</td>\r\n                  <td>{item.last_name}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </Table>\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={totalPages}\r\n        previousLabel=\"< previous\"\r\n        pageClassName=\"page-item\"\r\n        pageLinkClassName=\"page-link\"\r\n        previousClassName=\"page-item\"\r\n        previousLinkClassName=\"page-link\"\r\n        nextClassName=\"page-item\"\r\n        nextLinkClassName=\"page-link\"\r\n        breakClassName=\"page-item\"\r\n        breakLinkClassName=\"page-link\"\r\n        containerClassName=\"pagination\"\r\n        activeClassName=\"active\"\r\n      />\r\n\r\n      <ModalAddNew\r\n        show={isShowModalAddNew}\r\n        handleClose={handleClose}\r\n        handleUpdateTable={handleUpdateTable}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableUsers;\r\n","import \"./App.scss\";\r\nimport Header from \"./components/Header\";\r\nimport TableUsers from \"./components/TableUsers\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"app-container\">\r\n        <Header />\r\n        <Container>\r\n          <TableUsers />\r\n        </Container>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"light\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}